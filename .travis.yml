language: cpp
depth: 3

matrix:
 include:
  - name: Linux Qt 5.5
    os: linux
    dist: trusty
    sudo: true
    compiler: gcc
    env:
     - QT_REPO="ppa:beineri/opt-qt551-trusty"
     - QT_VERSION="qt55"
     - QTHOME="/opt/${QT_VERSION}"
  - name: Linux Qt 5.6
    os: linux
    dist: trusty
    sudo: true
    compiler: gcc
    env:
     - QT_REPO="ppa:beineri/opt-qt562-trusty"
     - QT_VERSION="qt56"
     - QTHOME="/opt/${QT_VERSION}"
  - name: Linux Qt 5.7
    os: linux
    dist: trusty
    sudo: true
    compiler: gcc
    env:
     - QT_REPO="ppa:beineri/opt-qt571-trusty"
     - QT_VERSION="qt57"
     - QTHOME="/opt/${QT_VERSION}"
  - name: Linux Qt 5.8
    os: linux
    dist: trusty
    sudo: true
    compiler: gcc
    env:
     - QT_REPO="ppa:beineri/opt-qt58-trusty"
     - QT_VERSION="qt58"
     - QTHOME="/opt/${QT_VERSION}"
  - name: Linux Qt 5.9
    os: linux
    dist: trusty
    sudo: true
    compiler: gcc
    env:
     - QT_REPO="ppa:beineri/opt-qt592-trusty"
     - QT_VERSION="qt59"
     - QTHOME="/opt/${QT_VERSION}"
  - name: Windows x64
    os: windows
    env:
      - PLATFORM="x64"
      - QT_VERSION="5.12.1"
      - QTHOME="C:/Qt/${QT_VERSION}/msvc2017_64"
    cache:
      directories:
        - C:/Qt
  - name: Windows x32
    os: windows
    env:
      - PLATFORM="Win32"
      - QT_VERSION="5.12.1"
      - QTHOME="C:/Qt/${QT_VERSION}/msvc2017"
    cache:
      directories:
        - C:/Qt
     
before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
         sudo add-apt-repository "$QT_REPO" -y;
         sudo apt-get update -qq;
    fi
  - |
    if [ "$TRAVIS_OS_NAME" == "windows" ]; then
      # Workaround broken casher implementation that extracts absolute paths to the current working directory
      # See https://github.com/travis-ci/casher/pull/38
      for path in Qt; do if [ -d "$path" ]; then echo "Restoring C:/$path"; mv "$path/"* "C:/$path"; fi; done
      # Update checksums to avoid invalidating the cache.
      if [ -d Qt ]; then md5deep64 -o f -r  "C:/Qt" | sort > ~/.casher/md5sums_before; fi
    fi


install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      sudo apt-get install -qq ${QT_VERSION}base ${QT_VERSION}translations ${QT_VERSION}tools ${QT_VERSION}x11extras;
      sudo apt-get install -qq libsqlite3-dev libx11-dev;
      source ${QTHOME}/bin/${QT_VERSION}-env.sh;
    fi
  - if [ "$TRAVIS_OS_NAME" == "windows" ]; then
      choco install -y nsis
      choco install -y sqlite --params "/NoTools"
      if [ ! -e "${QTHOME}/bin/moc.exe" ]; then
        curl -vLo ~/qt-unified-windows-x86-online.exe http://download.qt.io/official_releases/online_installers/qt-unified-windows-x86-online.exe
        if ! ~/qt-unified-windows-x86-online.exe --verbose --script tools/qt-installer-windows.qs > ~/qt-installer-output.txt; then
          cat ~/qt-installer-output.txt; exit 1
        fi
      fi
      ${QTHOME]/bin/qtenv2.bat
    fi

script:
  - mkdir build
  - cd build
  - qmake -r ../src/birdtray.pro
  - make

before_deploy:
  - |
    if [ "$TRAVIS_OS_NAME" == "windows" ]; then
      cd installer
      buildInstaller.bat "..\build\release\birdtray.exe" "libsqlite3-0.dll"
    fi

deploy:
  - provider: releases
    api_key:
      secure: "TODO"
    file_glob: true
    file: "installer/Birdtray-*.exe"
    skip_cleanup: true
    on:
      tags: true
      branch: master
